worker_processes 4;

events {
    use epoll;
    worker_connections 10240;
}

http {
    server_tokens off;
    include mime.types;
    charset utf-8;

    server {
        server_name "${SRV_DUCKDNS_SUBDOMAIN}.duckdns.org";
        listen 443 ssl http2;
        ssl_certificate "/etc/letsencrypt/live/${SRV_DUCKDNS_SUBDOMAIN}.duckdns.org/fullchain.pem";
        ssl_certificate_key "/etc/letsencrypt/live/${SRV_DUCKDNS_SUBDOMAIN}.duckdns.org/privkey.pem";
        location / {
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            root /usr/share/nginx/html;
        }
    }

    server {
        server_name "files.${SRV_DUCKDNS_SUBDOMAIN}.duckdns.org";
        listen 443 ssl http2;
        ssl_certificate "/etc/letsencrypt/live/files.${SRV_DUCKDNS_SUBDOMAIN}.duckdns.org/fullchain.pem";
        ssl_certificate_key "/etc/letsencrypt/live/files.${SRV_DUCKDNS_SUBDOMAIN}.duckdns.org/privkey.pem";
        location / {
            client_max_body_size 400G;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
	        proxy_set_header Upgrade websocket;
            proxy_set_header Connection Upgrade;
	        proxy_set_header Host $host;
            proxy_pass http://filebrowser;
	    }
    }

    server {
        server_name "vpn.${SRV_DUCKDNS_SUBDOMAIN}.duckdns.org";
        listen 443 ssl http2;
        ssl_certificate "/etc/letsencrypt/live/vpn.${SRV_DUCKDNS_SUBDOMAIN}.duckdns.org/fullchain.pem";
        ssl_certificate_key "/etc/letsencrypt/live/vpn.${SRV_DUCKDNS_SUBDOMAIN}.duckdns.org/privkey.pem";
        location / {
            client_max_body_size 5M;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header Host $host;
            proxy_pass http://wireguard:51821;
        }
    }

    server {
        listen 443 ssl http2;
        ssl_certificate "/etc/letsencrypt/live/plex.${SRV_DUCKDNS_SUBDOMAIN}.duckdns.org/fullchain.pem";
        ssl_certificate_key "/etc/letsencrypt/live/plex.${SRV_DUCKDNS_SUBDOMAIN}.duckdns.org/privkey.pem";
        server_name "plex.${SRV_DUCKDNS_SUBDOMAIN}.duckdns.org";
        send_timeout 100m; 
        gzip "on";
        gzip_vary "on";
        gzip_min_length 1000;
        gzip_proxied any;
        gzip_types text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
        gzip_disable "MSIE [1-6]\.";
        client_max_body_size 100M;
        proxy_http_version 1.1;
        proxy_set_header Host localhost;
        proxy_set_header Referer localhost;
        proxy_set_header Origin $scheme://localhost:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Accept-Encoding "";
        proxy_redirect off;
        proxy_buffering off;
        location / {
            proxy_pass http://plex:32400;
       	}
    }
}