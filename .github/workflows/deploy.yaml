name: "Deployments"


on:
  push:
    branches: [ "main" ]


jobs:
  configure:
    runs-on: "webmauri"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
      - name: "Configure Ubuntu Server"
        run: |
          sudo sudo apt update && sudo apt upgrade -y
          if ! [ -x "$(command -v docker)" ]; then
            sudo apt install -y ca-certificates curl gnupg lsb-release build-essential
            sudo mkdir -p /etc/apt/keyrings && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            sudo echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            sudo systemctl enable --now docker.service && sudo systemctl disable --now systemd-resolved.service
            sudo rm -f /etc/resolv.conf && sudo echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf >> /dev/null
          fi


  deploy:
    runs-on: "webmauri"
    needs: [ "configure" ]
    steps:
      - name: "Deploy services"
        env:
          SRV_DUCKDNS_TOKEN: "${{secrets.SRV_DUCKDNS_TOKEN}}"
          SRV_DUCKDNS_SUBDOMAIN: "${{secrets.SRV_DUCKDNS_SUBDOMAIN}}"
          SRV_ADMIN_USERNAME: "${{secrets.SRV_ADMIN_USERNAME}}"
          SRV_ADMIN_PASSWORD: "${{secrets.SRV_ADMIN_PASSWORD}}"
          SRV_PLEX_TOKEN: "${{secrets.SRV_PLEX_TOKEN}}"
          SRV_ADMIN_EMAIL: "${{secrets.SRV_ADMIN_EMAIL}}"
        run: |
          sudo mkdir -p /srv/nginx/conf /srv/nginx/html
          envsubst '${SRV_DUCKDNS_SUBDOMAIN}' < conf/certbot.nginx.conf | sudo tee /srv/nginx/conf/certbot.nginx.conf > /dev/null
          envsubst '${SRV_DUCKDNS_SUBDOMAIN}' < conf/nginx.conf | sudo tee /srv/nginx/conf/nginx.conf > /dev/null
          envsubst '${SRV_DUCKDNS_SUBDOMAIN} ${SRV_ADMIN_EMAIL}' < certs/gencerts.sh | sudo tee /srv/nginx/gencerts.sh > /dev/null
          envsubst < docker-compose.yaml | sudo tee /srv/docker-compose.yaml > /dev/null
          sudo docker compose -f /srv/docker-compose.yaml up -d